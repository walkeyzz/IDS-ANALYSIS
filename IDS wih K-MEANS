##---------Langkah 1 - Mengumpulkan Data---------------

ids <- read.csv("C:/Users/ASUS/Downloads/ids lama.csv", sep=";", stringsAsFactors=TRUE)
View(ids)

#melihat visualisasi distribusi data 
boxplot(ids)

# So that the absolute value of 0 is not mistaken for NA
ids[is.na(ids)] <- 0

# Read in data and examine structure
str(ids)

# Custom normalization function
normalize <- function(x) { 
  return((x - min(x)) / (max(x) - min(x)))
}

# Apply normalization to entire data frame
ids_norm <- as.data.frame(lapply(ids, normalize))
str(ids_norm)

# Confirm that the range is now between zero and one
summary(ids_norm$labels)

# Compared to the original minimum and maximum
summary(ids$labels)
boxplot(ids_norm)

#--------Langkah 2 CORRELATION------------------------------
Faktor_Berpengaruh <- cor(ids_norm[c("duration", "protocol_type", "service", "flag", "src_bytes", 
                                "dst_bytes", "land", "wrong_fragment", "urgent", "hot", 
                                "num_failed_logins", "logged_in", "num_compromised", 
                                "root_shell", "su_attempted", "num_root", 
                                "num_file_creations", "num_shells", "num_access_files", 
                                 "is_host_login", "is_guest_login", 
                                "count", "srv_count", "serror_rate", 
                                "srv_serror_rate", "rerror_rate", "srv_rerror_rate", 
                                "same_srv_rate", "diff_srv_rate", "srv_diff_host_rate", 
                                "dst_host_count", "dst_host_srv_count", 
                                "dst_host_same_srv_rate", "dst_host_diff_srv_rate", 
                                "dst_host_same_src_port_rate", "dst_host_srv_diff_host_rate", 
                                "dst_host_serror_rate", "dst_host_srv_serror_rate", 
                                "dst_host_rerror_rate", "dst_host_srv_rerror_rate", "labels")],
                          use = "complete.obs")

print(Faktor_Berpengaruh)

# melihat nilai korelasi antara variabel dengan kolom "labels"
Faktor_Berpengaruh["duration", "labels"]
Faktor_Berpengaruh["protocol_type", "labels"]
Faktor_Berpengaruh["service", "labels"]
Faktor_Berpengaruh["flag", "labels"]
Faktor_Berpengaruh["src_bytes", "labels"]
Faktor_Berpengaruh["dst_bytes", "labels"]
Faktor_Berpengaruh["land", "labels"]
Faktor_Berpengaruh["wrong_fragment", "labels"]
Faktor_Berpengaruh["urgent", "labels"]
Faktor_Berpengaruh["hot", "labels"]
Faktor_Berpengaruh["num_failed_logins", "labels"]
Faktor_Berpengaruh["logged_in", "labels"]
Faktor_Berpengaruh["num_compromised", "labels"]
Faktor_Berpengaruh["root_shell", "labels"]
Faktor_Berpengaruh["su_attempted", "labels"]
Faktor_Berpengaruh["num_root", "labels"]
Faktor_Berpengaruh["num_file_creations", "labels"]
Faktor_Berpengaruh["num_shells", "labels"]
Faktor_Berpengaruh["num_access_files", "labels"]
Faktor_Berpengaruh["is_host_login", "labels"]
Faktor_Berpengaruh["is_guest_login", "labels"]
Faktor_Berpengaruh["count", "labels"]
Faktor_Berpengaruh["srv_count", "labels"]
Faktor_Berpengaruh["serror_rate", "labels"]
Faktor_Berpengaruh["srv_serror_rate", "labels"]
Faktor_Berpengaruh["rerror_rate", "labels"]
Faktor_Berpengaruh["srv_rerror_rate", "labels"]
Faktor_Berpengaruh["same_srv_rate", "labels"]
Faktor_Berpengaruh["diff_srv_rate", "labels"]
Faktor_Berpengaruh["srv_diff_host_rate", "labels"]
Faktor_Berpengaruh["dst_host_count", "labels"]
Faktor_Berpengaruh["dst_host_srv_count", "labels"]
Faktor_Berpengaruh["dst_host_same_srv_rate", "labels"]
Faktor_Berpengaruh["dst_host_diff_srv_rate", "labels"]
Faktor_Berpengaruh["dst_host_same_src_port_rate", "labels"]
Faktor_Berpengaruh["dst_host_srv_diff_host_rate", "labels"]
Faktor_Berpengaruh["dst_host_serror_rate", "labels"]
Faktor_Berpengaruh["dst_host_srv_serror_rate", "labels"]
Faktor_Berpengaruh["dst_host_rerror_rate", "labels"]
Faktor_Berpengaruh["dst_host_srv_rerror_rate", "labels"]

# Mendapatkan daftar nama kolom dari dataset
column_names <- colnames(ids_norm)

# Menampilkan daftar nama kolom
print(column_names)

# menjadikan 6 kolom dengan nilai korelasi tertinggi menjadi satu dataset
selected_columns <- c("srv_count", "dst_host_diff_srv_rate", "dst_host_same_same_port_rate", "is_guest_login", "wrong_fragment", "count", "labels")

# Memilih kolom-kolom yang diinginkan dari dataset
ids_new <- ids_norm[, column_names %in% selected_columns]

# Menampilkan dataset baru
print(ids_new)
str(ids_new)

##---------Langkah 3 - Mulai analisis k-means---------------

library(factoextra)
library(cluster)

#membentuk cluster (sesuaikan dengan cluster optimum)
cluster <- kmeans(ids_new,5)

#visualisasi cluster
fviz_cluster(cluster,ids_new) 

#interpretasi dan penamaan cluster
cluster$centers

k5 = kmeans(ids_new, centers = 5, nstart = 25)

# disini untuk melihat sebaran tiap cluster ada berapa banyak
print(k5)

# mengembalikan dari data normalisasi ke data sebelum normalisasi
final=data.frame(ids, k5$cluster)

View(final)

# Menggunakan fungsi dist() untuk menghitung jarak Euclidean
distances <- dist(cluster$centers, method = "euclidean")
print(distances)

