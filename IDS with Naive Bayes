#--Langkah 1 - Mengumpulkan Data

ids <- read.csv("C:/Users/ASUS/Downloads/ids lama.csv", sep=";", stringsAsFactors=TRUE)
View(ids)
# mengimport data dari file dan menampilkan dataset di rstudio, disini data terdiri dari 42 kolom dan 22.455 baris

#--Transformasi dan Persiapan Data

str(ids)
# syntax ini bertujuan untuk melihat tipe dari struktur data

#--Menangani nilai yang hilang

ids[is.na(ids)] <- 0
# pada dataset ini, ada beberapa kolom yang isi datanya "0", tetapi bukan data kosong dan memang nilainya 0. maka kita submit syntax ini untuk menginisialisasi nilai 0 bukan data NA

#--Merubah nama labels(serangan) dari angka menjadi nama

ids$labels <- factor(ids$labels, levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36"), labels = c("apache2", "back", "buffer_overflow", "ftp_write", "guess_passwd", "httptunnel", "imap", "ipsweep", "land", "loadmodule", "mailbomb", "mscan", "multihop", "named", "neptune", "nmap", "normal", "perl", "phf", "pod", "portsweep", "processtable", "ps", "rootkit", "saint", "satan", "sendmail", "smurf", "snmgetattack", "snmpguess", "teardrop", "warezclient", "warezmaster", "xlock", "xsnoop", "xterm"))

ids$labels
# untuk pengubahan dari angka menjadi nama label sudah disesuaikan dengan ketentuan sumber jurnal. 

#--Buat kolom label baru yang 5 kategori serangan

ids$labels2 <- NA
# kolom `labels2` dibuat NA atau kosong dahulu, nanti baru diisi dengan kategori serangan baru

#--Mengelompokkan variabel sesuai dengan kategori yang diinginkan

ids$labels2[ids$labels %in% c("normal")] <- "normal"
ids$labels2[ids$labels %in% c("back", "land", "pod", "smurf", "teardropdrop", "apache2", "udpstorm", "processtable", "mailbomb", "neptune")] <- "Dos"
ids$labels2[ids$labels %in% c("satan", "ipsweep", "nmap", "portsweep", "mscan", "saint")] <- "Probe"
ids$labels2[ids$labels %in% c("guess_passwd", "ftp_write", "imap", "phf", "multihop", "warezmaster", "xlock", "xsnoop", "snmpguess", "snmpgetattack", "httptunnel", "sendmail", "named")] <- "R2L"
ids$labels2[ids$labels %in% c("buffer_overflow", "loadmodule", "rootkit", "perl", "sqlattack", "xterm", "ps")] <- "U2R"

# hal ini bertujuan agar kita mengkategorikan `labels` yang terdiri dari 36 kategori serangan, di kategorikan lagi jadi 5 kategori serangan dan diletakkan pada kolom `labels2`

#--Memfilter data numerik

numeric_columns <- ids[, sapply(ids, is.numeric)]
numeric_columns
# saat normalisasi data, diperlukan data yang numerik saja, maka dari itu, kita harus memfilternya terlebih dahulu agar tidak tergabung dengan data lainnya

#--Langkah 2 - Normalisasi Data

#--Visualisasi sebaran data per variabel

boxplot(numeric_columns)
# distribusi data belum baik, maka dari itu kita harus melakukan normalisasi data terlebih dahulu

# Normalisasi min-max 

normalize <- function(x) { 
  return((x - min(x)) / (max(x) - min(x)))
}
# menormalisasi data dengan metode max min agar rentang nilai dari dataset lebih baik

#--Terapkan normalisasi ke seluruh bingkai data frame

ids_norm <- as.data.frame(lapply(numeric_columns, normalize))
boxplot(ids_norm)
summary(ids_norm)
# melakukan normalisasi pada setiap elemen dari objek ids dan menyimpan hasilnya dalam bentuk data frame baru yang disebut `ids_norm`
# data ids sudah terdistribusi normal

#--Menyatukan kembali dengan kolom "labels"

ids_new <- cbind(ids[c("labels","labels2")], ids_norm)
# karena isi dari `ids_norm` tidak memiliki label, maka kita gabungkan kembali dengan label sebelumnya

#--Membuat data testing dan data training

ids_train <- ids_new[1:15781, ]
ids_test <- ids_new[15782:22544, ]
round(prop.table(table(ids_new$labels2)) * 100, digits = 1)
# distribusi kategori menunjukkan bahwa sebagian besar data uji tergolong ke dalam kategori "normal" dan "Dos", sementara aktivitas anomali cenderung lebih jarang terjadi.

#--Langkah 3 - Analisis Naive Bayes

#--Mulai analisis naive bayes

library(e1071)
library(caret)
modelNB = naiveBayes(labels2~. , data=ids_train)
# membuat model naive bayes dengan mengambil label kolom `labels2` dari data `ids_train`

#--Melakukan prediksi

prediksi = predict(modelNB,ids_test)
prediksi
# model Naive Bayes telah melakukan prediksi kategori pada data pengujian. Distribusi prediksi menunjukkan variasi antara kategori "Dos", "normal", "Probe", "R2L", dan "U2R".

#--Evaluasi

hasil = confusionMatrix(table(prediksi,ids_test$labels2))
hasil
